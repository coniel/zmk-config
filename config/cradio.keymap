/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

  combos {
    compatible = "zmk,combos";
    combo_esc {
      timeout-ms = <50>;
      key-positions = <1 2 3>;
      bindings = <&kp ESC>;
    };

    combo_enter {
      timeout-ms = <50>;
      key-positions = <6 7 8>;
      bindings = <&kp BACKSPACE>;
    };

    };

    behaviors {
        tdExclDot: tap_dance_excl_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_EXCL_DOT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp EXCL>, <&kp DOT>;
        };

        htUnderSlash: hold_tap_under_slash {
            compatible = "zmk,behavior-tap-dance";
            label = "HOLD_TAP_UNDER_SLASH";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp UNDER>, <&kp SLASH>;
        };

        tdGtLt: tap_dance_gt_lt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GT_LT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GT>, <&kp LT>;
        };

        tdRparLpar: tap_dance_rpar_lpar {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RPAR_LPAR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RPAR>, <&kp LPAR>;
        };

        tdRbktLbkt: tap_dance_rbkt_lbkt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RBKT_LBKT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp UNDER>, <&kp SLASH>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht_tp: hold_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lht: layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&to>;
        };
    };

    keymap {
      compatible = "zmk,keymap";
      default_layer {
        bindings = <
          &kp Q   &kp W   &kp E   &kp R   &kp T 						          &kp Y   &kp U   &kp I   &kp O   &kp P 

          &kp A   &kp S   &hm LALT D   &hm LGUI F   &kp G 			      &kp H   &kp J   &kp K   &kp L   &kp TAB

          &kp Z   &kp X   &kp C   &kp V   &kp B				                &kp N   &hm RGUI M   &ht_tp COMMA DOT   &ht_tp UNDER SLASH   &kp RET

          &mt LSHIFT ESC   &kp SPC  			                            &lht RSHIFT 1   &kp LCTL 
        >;
      };

      left_layer {
        bindings = <
          &kp EXCL   &kp AT   &kp HASH   &kp DLLR   &kp PRCNT		                       &kp CARET   &kp AMPS   &kp STAR   &kp SEMI   &kp MINUS 

          &kp COLON   &kp GRAVE  &hm LALT SQT   &hm LGUI DQT   &kp EQUAL                  &kp LT   &kp RBRC   &kp LBRC   &kp GT   &kp BKSP

          &kp TILDE   &kp TILDE   &kp NON_US_BSLH   &kp NON_US_HASH   &kp TILDE2 	     &kp LBKT   &hm RGUI LPAR   &kp RPAR   &kp RBKT   &kp RET

          &mt LSHIFT ESC &to 0   					                                                 &lht RSHIFT 2 &to 3 
        >;
      };
		
      right_layer {
        bindings = <
          &kp N1  &kp N2 &kp N3  &kp N4  &kp N5    			          &kp N6  &kp N7 &kp N8 &kp N9 &kp N0

          &kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp LEFT &kp DOWN  &kp UP  &kp RIGHT   &kp BKSP

          &kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp BACKSLASH &kp DOWN &kp UP  &kp RET

          &kp LCTL &to 0  				                                &kp SPC  &to 1 
        >;
      };	
      
      tri_layer {
        bindings = <
          &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &kp NUM_4    &bootloader 			&bootloader &trans   &trans   &trans  &trans

          &kp F1 &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT &kp F5  						&trans &kp K_VOL_DN  &kp K_VOL_UP &kp K_MUTE &trans 

          &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp C_BRI_DN  &kp C_BRI_UP  &trans &trans   

                 &kp LSHIFT &to 0  					&trans &trans 
        >;
      };	
        
	};
};
